plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-plugin-typescript

service: ${env:SERVERLESS_NAME}

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${env:ENVIRONMENT}
  region: us-east-1
  versionFunctions: false
  deploymentBucket:
    name: serverless-elearning-${env:AWS_ACCOUNT_ID}-${env:ENVIRONMENT}-deployment
  logRetentionInDays: 7
  environment:
    AWS_KEY: ${env:AWS_KEY}
    AWS_SECRET: ${env:AWS_KEY}
    AWS_ACCOUNT_ID: ${env:AWS_ACCOUNT_ID}
    AWS_REGION_CODE: ${env:AWS_REGION_CODE}
    AWS_API_VERSION: ${env:AWS_API_VERSION}

    AWS_DYNAMO_DB_READ_CAPACITY_UNITS: ${env:AWS_DYNAMO_DB_READ_CAPACITY_UNITS}
    AWS_DYNAMO_DB_WRITE_CAPACITY_UNITS: ${env:AWS_DYNAMO_DB_WRITE_CAPACITY_UNITS}
    AWS_DYNAMO_DB_LIMIT: ${env:AWS_DYNAMO_DB_LIMIT}

    AWS_MEDIA_CONVERT_API_VERSION: ${env:AWS_MEDIA_CONVERT_API_VERSION}
    AWS_MEDIA_CONVERT_ENDPOINT: ${env:AWS_MEDIA_CONVERT_ENDPOINT}
    AWS_MEDIA_CONVERT_JOB_TEMPLATE: ${env:AWS_MEDIA_CONVERT_JOB_TEMPLATE}
    AWS_MEDIA_CONVERT_OUTPUT_BUCKET: ${env:AWS_MEDIA_CONVERT_OUTPUT_BUCKET}
    AWS_MEDIA_CONVERT_ROLE: ${env:AWS_MEDIA_CONVERT_ROLE}

    ENVIRONMENT: ${env:ENVIRONMENT}
    MASTER_KEY: ${env:MASTER_KEY}

    CORS_ALLOW_ORIGIN: ${env:CORS_ALLOW_ORIGIN}

    BASE_URL: ${env:BASE_URL}
    PORT: ${env:PORT}

    SERVERLESS_NAME: ${env:SERVERLESS_NAME}

functions:
  - ${file(./src/context/v1/media-services/serverless.yml)}
  - ${file(./src/context/v1/subscriptions/serverless.yml)}
  - ${file(./src/context/v1/user-groups/serverless.yml)}
  - ${file(./src/context/v1/videos/serverless.yml)}

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,POST,DELETE,OPTIONS'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

custom:
  serverless-offline:
    port: ${self:provider.environment.PORT}
